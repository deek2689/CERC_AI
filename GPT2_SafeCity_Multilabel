{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"colab":{"provenance":[],"gpuType":"T4"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"ca2a9f2171bb43edbb979c7ea21c0557":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_cffb966d2f8241a9a888f62487a7f116","IPY_MODEL_3d9f90d5d35f49b3a3d945a9b4917174","IPY_MODEL_7207627056e642958d61b0e83378c3b9"],"layout":"IPY_MODEL_e129b2a37c9a4d0cb6d1aa0d31e39dee"}},"cffb966d2f8241a9a888f62487a7f116":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d07427cfce8142bc90f44a4ee34dbca5","placeholder":"​","style":"IPY_MODEL_7352876852574f42b203249f7ae7bdb1","value":"tokenizer_config.json: 100%"}},"3d9f90d5d35f49b3a3d945a9b4917174":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_66499edeb225483190c31b7d169e25ec","max":26,"min":0,"orientation":"horizontal","style":"IPY_MODEL_5358a16580ee41fba11369b70f7879a5","value":26}},"7207627056e642958d61b0e83378c3b9":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_838d7880e9d44cf4a2fde3c72223af63","placeholder":"​","style":"IPY_MODEL_333c7e73272c45fb8ee925c39c0ab331","value":" 26.0/26.0 [00:00&lt;00:00, 2.04kB/s]"}},"e129b2a37c9a4d0cb6d1aa0d31e39dee":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d07427cfce8142bc90f44a4ee34dbca5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7352876852574f42b203249f7ae7bdb1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"66499edeb225483190c31b7d169e25ec":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5358a16580ee41fba11369b70f7879a5":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"838d7880e9d44cf4a2fde3c72223af63":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"333c7e73272c45fb8ee925c39c0ab331":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e0b23ee961ca4e02b07bc9cba59a8a7e":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_669a7b9f9f274932aebe465490450fe2","IPY_MODEL_49be6fefd86f4edd813c70893cfc7911","IPY_MODEL_7f13d9a34f1c4d79b05a54faf4710aea"],"layout":"IPY_MODEL_0b4dd6bda9704b0cbcb47221152cc52d"}},"669a7b9f9f274932aebe465490450fe2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_00838d77e82d4c4eab2c7645fdc310dc","placeholder":"​","style":"IPY_MODEL_ef9257d698884397b0b400bcc0fa4e6b","value":"vocab.json: 100%"}},"49be6fefd86f4edd813c70893cfc7911":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_0f14c98730474b8e823186db7cf7aa52","max":1042301,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c1036ebbb93741c0aaa7dbc9fc4e83e4","value":1042301}},"7f13d9a34f1c4d79b05a54faf4710aea":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_854e3bf6c8f44da59802d4dd771e2a4c","placeholder":"​","style":"IPY_MODEL_b21205e7df9140a1a214a78ad549dbae","value":" 1.04M/1.04M [00:00&lt;00:00, 4.71MB/s]"}},"0b4dd6bda9704b0cbcb47221152cc52d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"00838d77e82d4c4eab2c7645fdc310dc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ef9257d698884397b0b400bcc0fa4e6b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0f14c98730474b8e823186db7cf7aa52":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c1036ebbb93741c0aaa7dbc9fc4e83e4":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"854e3bf6c8f44da59802d4dd771e2a4c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b21205e7df9140a1a214a78ad549dbae":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0890ae3f58934796873e596f007f1021":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_eed19d7524474433811038fec9cc6053","IPY_MODEL_633bf8061f03410389bf3b3ac1c5883f","IPY_MODEL_c0d43bb82b9e4b8386428caad0f8606c"],"layout":"IPY_MODEL_5262a577dc6640ab84681358401b3d0a"}},"eed19d7524474433811038fec9cc6053":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_fcf05c6286094667aded6a167c9f0c30","placeholder":"​","style":"IPY_MODEL_515acb7e23ea40dd9618a34524e774c3","value":"merges.txt: 100%"}},"633bf8061f03410389bf3b3ac1c5883f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_049f5f896a154859a31767bc94e5c0e8","max":456318,"min":0,"orientation":"horizontal","style":"IPY_MODEL_d208fea954674aa3bed9fe6476fb46a4","value":456318}},"c0d43bb82b9e4b8386428caad0f8606c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_14e3804a3bf84a8f88c9dcc06f7275b7","placeholder":"​","style":"IPY_MODEL_6192c61ac9ad46cabb93dad8f5a30941","value":" 456k/456k [00:00&lt;00:00, 1.07MB/s]"}},"5262a577dc6640ab84681358401b3d0a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fcf05c6286094667aded6a167c9f0c30":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"515acb7e23ea40dd9618a34524e774c3":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"049f5f896a154859a31767bc94e5c0e8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d208fea954674aa3bed9fe6476fb46a4":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"14e3804a3bf84a8f88c9dcc06f7275b7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6192c61ac9ad46cabb93dad8f5a30941":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"27b584445ed049008da6affb858717e1":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_df773f5fb9ff4a7f8e0f9ef4777f266d","IPY_MODEL_34635ad097b34ee18d5b5f3b39807d40","IPY_MODEL_a739fa82913c4fe193eac5fb1af07cc0"],"layout":"IPY_MODEL_b5c3991b564949ed9dae18921d86008a"}},"df773f5fb9ff4a7f8e0f9ef4777f266d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_818c63a2502e44569ad8354eec861f47","placeholder":"​","style":"IPY_MODEL_4f42f593219f4419ab4d86b8eefa29f5","value":"tokenizer.json: 100%"}},"34635ad097b34ee18d5b5f3b39807d40":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_829f716d696a45169614610d38183b64","max":1355256,"min":0,"orientation":"horizontal","style":"IPY_MODEL_2c590d8912f3443faa99a78f81ad0b33","value":1355256}},"a739fa82913c4fe193eac5fb1af07cc0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_cb1b0f34b26c4ce8b9d85b1a8597038d","placeholder":"​","style":"IPY_MODEL_9ddc3128761d4541ad2d7c55bb26d31f","value":" 1.36M/1.36M [00:00&lt;00:00, 2.11MB/s]"}},"b5c3991b564949ed9dae18921d86008a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"818c63a2502e44569ad8354eec861f47":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4f42f593219f4419ab4d86b8eefa29f5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"829f716d696a45169614610d38183b64":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2c590d8912f3443faa99a78f81ad0b33":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"cb1b0f34b26c4ce8b9d85b1a8597038d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9ddc3128761d4541ad2d7c55bb26d31f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"425dedd17889484eb03238cd5d9a9f4f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_7c3d927628bc47958ff41996702eac61","IPY_MODEL_7d491dd55f604822844c47c339efc6a5","IPY_MODEL_fdbfd2fcd94b4f1caa3aa50830833770"],"layout":"IPY_MODEL_92b47d377a04426cb067775109cf26d6"}},"7c3d927628bc47958ff41996702eac61":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_72237cb645954dd7a5ffbbe89253ca74","placeholder":"​","style":"IPY_MODEL_69361d8177e34b219a4c194fc496311b","value":"config.json: 100%"}},"7d491dd55f604822844c47c339efc6a5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_4d1d2509b4e747c8b4618e74bc6cf538","max":665,"min":0,"orientation":"horizontal","style":"IPY_MODEL_5c7888a42da5458d8a4613289d968322","value":665}},"fdbfd2fcd94b4f1caa3aa50830833770":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c58fb210d27546c5af8e8db3169d8812","placeholder":"​","style":"IPY_MODEL_a957aa35c38d49c1b21d5f827525b5dc","value":" 665/665 [00:00&lt;00:00, 55.6kB/s]"}},"92b47d377a04426cb067775109cf26d6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"72237cb645954dd7a5ffbbe89253ca74":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"69361d8177e34b219a4c194fc496311b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4d1d2509b4e747c8b4618e74bc6cf538":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5c7888a42da5458d8a4613289d968322":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c58fb210d27546c5af8e8db3169d8812":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a957aa35c38d49c1b21d5f827525b5dc":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[],"dockerImageVersionId":30840,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip install accelerate transformers torch -q -U","metadata":{"id":"_FgBqCyJpJ0y","colab":{"base_uri":"https://localhost:8080/"},"outputId":"41e2f580-1b19-479b-dd2f-ef086094451a","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:00.720985Z","iopub.execute_input":"2025-01-18T20:53:00.721328Z","iopub.status.idle":"2025-01-18T20:53:17.483621Z","shell.execute_reply.started":"2025-01-18T20:53:00.721305Z","shell.execute_reply":"2025-01-18T20:53:17.482581Z"}},"outputs":[{"name":"stdout","text":"\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m44.4/44.4 kB\u001b[0m \u001b[31m1.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m336.6/336.6 kB\u001b[0m \u001b[31m8.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0mta \u001b[36m0:00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m9.7/9.7 MB\u001b[0m \u001b[31m75.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m0:01\u001b[0m\n\u001b[?25h","output_type":"stream"}],"execution_count":3},{"cell_type":"code","source":"import os\nimport random\nimport numpy as np\nimport pandas as pd\nimport torch\nfrom torch.utils.data import DataLoader, TensorDataset\nfrom transformers import GPT2Tokenizer, GPT2ForSequenceClassification, AdamW\nfrom tqdm import tqdm\nfrom sklearn.metrics import accuracy_score, recall_score, f1_score, precision_score, classification_report, hamming_loss","metadata":{"id":"HaTl_3D6pFTv","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:17.485162Z","iopub.execute_input":"2025-01-18T20:53:17.485523Z","iopub.status.idle":"2025-01-18T20:53:42.418574Z","shell.execute_reply.started":"2025-01-18T20:53:17.485491Z","shell.execute_reply":"2025-01-18T20:53:42.417941Z"}},"outputs":[],"execution_count":4},{"cell_type":"code","source":"def set_seed(seed=42):\n    random.seed(seed)\n    np.random.seed(seed)\n    torch.manual_seed(seed)\n    if torch.cuda.is_available():\n        torch.cuda.manual_seed_all(seed)\n\nset_seed(42)","metadata":{"id":"UetfFXaQpNI_","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:42.419734Z","iopub.execute_input":"2025-01-18T20:53:42.420273Z","iopub.status.idle":"2025-01-18T20:53:42.519202Z","shell.execute_reply.started":"2025-01-18T20:53:42.420248Z","shell.execute_reply":"2025-01-18T20:53:42.518319Z"}},"outputs":[],"execution_count":5},{"cell_type":"markdown","source":"\n##  DATA PATHS & HYPERPARAMETERS\n","metadata":{"id":"9NCJSFOtpXSh"}},{"cell_type":"code","source":"train_path = 'https://raw.githubusercontent.com/deek2689/CERC_AI/refs/heads/main/SafeCity%20Datasets/multilabel/train.csv'\ntest_path = 'https://raw.githubusercontent.com/deek2689/CERC_AI/refs/heads/main/SafeCity%20Datasets/multilabel/test.csv'\nval_path = 'https://raw.githubusercontent.com/deek2689/CERC_AI/refs/heads/main/SafeCity%20Datasets/multilabel/dev.csv'\nbatch_size = 8\nlearning_rate = 5e-5\nnum_epochs = 10\npatience = 2     # number of epochs to wait for improvement before stopping\nmax_length = 512","metadata":{"id":"0TfsmgNVpRbS","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:42.520487Z","iopub.execute_input":"2025-01-18T20:53:42.520706Z","iopub.status.idle":"2025-01-18T20:53:42.650698Z","shell.execute_reply.started":"2025-01-18T20:53:42.520688Z","shell.execute_reply":"2025-01-18T20:53:42.649791Z"}},"outputs":[],"execution_count":6},{"cell_type":"markdown","source":"## READING DATA","metadata":{"id":"KFVOcaOpprbi"}},{"cell_type":"code","source":"train_data = pd.read_csv(train_path)\nval_data = pd.read_csv(val_path)\ntest_data = pd.read_csv(test_path)","metadata":{"id":"aSGw7qxtpnVN","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:42.651468Z","iopub.execute_input":"2025-01-18T20:53:42.651780Z","iopub.status.idle":"2025-01-18T20:53:43.472813Z","shell.execute_reply.started":"2025-01-18T20:53:42.651755Z","shell.execute_reply":"2025-01-18T20:53:43.471940Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"train_data.head()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"-i6OFGTOy2tO","outputId":"4dbee656-e63e-4e60-89b5-01e7352a8356","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:43.473818Z","iopub.execute_input":"2025-01-18T20:53:43.474164Z","iopub.status.idle":"2025-01-18T20:53:43.498752Z","shell.execute_reply.started":"2025-01-18T20:53:43.474137Z","shell.execute_reply":"2025-01-18T20:53:43.498000Z"}},"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"                                         Description  Commenting  \\\n0  Was walking along crowded street, holding mums...           0   \n1  This incident took place in the evening.I was ...           0   \n2  I WAS WAITING FOR THE BUS. A MAN CAME ON A BIK...           1   \n3                 Incident happened inside the train           0   \n4  I witnessed an incident when a chain was bruta...           0   \n\n   Ogling/Facial Expressions/Staring  Touching /Groping  \n0                                  0                  1  \n1                                  1                  0  \n2                                  0                  0  \n3                                  0                  0  \n4                                  0                  0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Description</th>\n      <th>Commenting</th>\n      <th>Ogling/Facial Expressions/Staring</th>\n      <th>Touching /Groping</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Was walking along crowded street, holding mums...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>This incident took place in the evening.I was ...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>I WAS WAITING FOR THE BUS. A MAN CAME ON A BIK...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Incident happened inside the train</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>I witnessed an incident when a chain was bruta...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":8},{"cell_type":"code","source":"train_data.rename(columns={\n    'Ogling/Facial Expressions/Staring': 'Ogling',\n    'Touching /Groping': 'Groping',\n    'Commenting': 'Commenting'\n}, inplace=True)\n\nval_data.rename(columns={\n    'Ogling/Facial Expressions/Staring': 'Ogling',\n    'Touching /Groping': 'Groping',\n    'Commenting': 'Commenting'\n}, inplace=True)\n\ntest_data.rename(columns={\n    'Ogling/Facial Expressions/Staring': 'Ogling',\n    'Touching /Groping': 'Groping',\n    'Commenting': 'Commenting'\n}, inplace=True)","metadata":{"id":"X07HcFGOpsvJ","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:43.499367Z","iopub.execute_input":"2025-01-18T20:53:43.499572Z","iopub.status.idle":"2025-01-18T20:53:43.508364Z","shell.execute_reply.started":"2025-01-18T20:53:43.499543Z","shell.execute_reply":"2025-01-18T20:53:43.507730Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"train_data.head()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"akAXGDlCqGqe","outputId":"e901edd5-7798-4256-e403-9d811275bbf1","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:43.510755Z","iopub.execute_input":"2025-01-18T20:53:43.510989Z","iopub.status.idle":"2025-01-18T20:53:43.530383Z","shell.execute_reply.started":"2025-01-18T20:53:43.510969Z","shell.execute_reply":"2025-01-18T20:53:43.529661Z"}},"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"                                         Description  Commenting  Ogling  \\\n0  Was walking along crowded street, holding mums...           0       0   \n1  This incident took place in the evening.I was ...           0       1   \n2  I WAS WAITING FOR THE BUS. A MAN CAME ON A BIK...           1       0   \n3                 Incident happened inside the train           0       0   \n4  I witnessed an incident when a chain was bruta...           0       0   \n\n   Groping  \n0        1  \n1        0  \n2        0  \n3        0  \n4        0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Description</th>\n      <th>Commenting</th>\n      <th>Ogling</th>\n      <th>Groping</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Was walking along crowded street, holding mums...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>This incident took place in the evening.I was ...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>I WAS WAITING FOR THE BUS. A MAN CAME ON A BIK...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Incident happened inside the train</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>I witnessed an incident when a chain was bruta...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":10},{"cell_type":"code","source":"train_data['Commenting'].value_counts()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"QDXmGEhiy7YQ","outputId":"3cb637c3-462c-4f1c-bf4e-4847865d039e","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:43.532002Z","iopub.execute_input":"2025-01-18T20:53:43.532269Z","iopub.status.idle":"2025-01-18T20:53:43.557116Z","shell.execute_reply.started":"2025-01-18T20:53:43.532249Z","shell.execute_reply":"2025-01-18T20:53:43.556348Z"}},"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"Commenting\n0    4381\n1    2820\nName: count, dtype: int64"},"metadata":{}}],"execution_count":11},{"cell_type":"code","source":"train_data['Ogling'].value_counts()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"1LEmMSQzqXSk","outputId":"a834e7f2-8585-497a-c80b-c152a22af4c7","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:43.558096Z","iopub.execute_input":"2025-01-18T20:53:43.558383Z","iopub.status.idle":"2025-01-18T20:53:43.574456Z","shell.execute_reply.started":"2025-01-18T20:53:43.558356Z","shell.execute_reply":"2025-01-18T20:53:43.573804Z"}},"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"Ogling\n0    5675\n1    1526\nName: count, dtype: int64"},"metadata":{}}],"execution_count":12},{"cell_type":"code","source":"train_data['Groping'].value_counts()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"fJ8NMghlqZdL","outputId":"47595851-a31e-44d8-c703-4cece473c435","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:43.575106Z","iopub.execute_input":"2025-01-18T20:53:43.575287Z","iopub.status.idle":"2025-01-18T20:53:43.594459Z","shell.execute_reply.started":"2025-01-18T20:53:43.575270Z","shell.execute_reply":"2025-01-18T20:53:43.593630Z"}},"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"Groping\n0    5035\n1    2166\nName: count, dtype: int64"},"metadata":{}}],"execution_count":13},{"cell_type":"markdown","source":"## PREPARING THE DATA","metadata":{"id":"CdPo-l4apzFB"}},{"cell_type":"code","source":"## Defining Instruction text\ninstruction = \"Classify if the following statement falls under one or more of the following categories related to sexual harassment: [Commenting, Ogling, Groping]. The output must be a combination of 'True' or 'False' for each category.\"\n\ndef format_dataset(row):\n    \"\"\"\n    Formats the dataset into the required structure for GPT-2 training.\n    \"\"\"\n    formatted_text = (\n        f\"### Instruction:\\n{instruction}\\n\\n\"\n        f\"### Input:\\n{row['Description']}\\n\\n\"\n        f\"### Response:\\n\"\n    )\n    labels = [row['Commenting'], row['Ogling'], row['Groping']]  \n    return formatted_text, labels\n\ndef process_dataset(df):\n    \"\"\"\n    Processes the data into the defined format\n    \"\"\"\n    formatted_texts = []\n    labels = []\n    for _, row in df.iterrows():\n        formatted_text, label = format_dataset(row)\n        formatted_texts.append(formatted_text)\n        labels.append(label)\n    return formatted_texts, labels\n\n# Applying the function\nformatted_texts_train, labels_train = process_dataset(train_data)\nformatted_texts_val, labels_val = process_dataset(val_data)\nformatted_texts_test, labels_test = process_dataset(test_data)\n","metadata":{"id":"hRfKsazSp0zz","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:43.595214Z","iopub.execute_input":"2025-01-18T20:53:43.595391Z","iopub.status.idle":"2025-01-18T20:53:44.071465Z","shell.execute_reply.started":"2025-01-18T20:53:43.595376Z","shell.execute_reply":"2025-01-18T20:53:44.070834Z"}},"outputs":[],"execution_count":14},{"cell_type":"code","source":"print(formatted_texts_train[0])","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sqsLF9GvzN2e","outputId":"32d6ca71-2260-49b1-94fb-37c87658df66","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:44.072104Z","iopub.execute_input":"2025-01-18T20:53:44.072292Z","iopub.status.idle":"2025-01-18T20:53:44.076654Z","shell.execute_reply.started":"2025-01-18T20:53:44.072276Z","shell.execute_reply":"2025-01-18T20:53:44.075909Z"}},"outputs":[{"name":"stdout","text":"### Instruction:\nClassify if the following statement falls under one or more of the following categories related to sexual harassment: [Commenting, Ogling, Groping]. The output must be a combination of 'True' or 'False' for each category.\n\n### Input:\nWas walking along crowded street, holding mums hand, when an elderly man groped butt, I turned to look at h7m and he looked away, and did it again after a while.I was 12 yrs old then.\n\n### Response:\n\n","output_type":"stream"}],"execution_count":15},{"cell_type":"code","source":"labels_train[0]","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tSmR7M11zQkJ","outputId":"63b524c1-b313-4bfc-f6c8-96f0fdc7ff74","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:44.077451Z","iopub.execute_input":"2025-01-18T20:53:44.077734Z","iopub.status.idle":"2025-01-18T20:53:44.097315Z","shell.execute_reply.started":"2025-01-18T20:53:44.077706Z","shell.execute_reply":"2025-01-18T20:53:44.096537Z"}},"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"[0, 0, 1]"},"metadata":{}}],"execution_count":16},{"cell_type":"markdown","source":"## Tokenization","metadata":{"id":"qeimdkG2r_jz"}},{"cell_type":"code","source":"tokenizer = GPT2Tokenizer.from_pretrained('gpt2')\ntokenizer.pad_token = tokenizer.bos_token  # or eos_token // Since GPT2 doesnt have a pad token\ntokenizer.padding_side = \"left\" # GPT2 being a decoder model, it uses the last token for prediction so padding on the left\n\ndef tokenize_dataset(formatted_texts, labels, max_length=512):\n    tokenized = tokenizer(\n        formatted_texts,\n        padding=True,\n        truncation=True,\n        max_length=max_length,\n        return_tensors=\"pt\"\n    )\n    input_ids = tokenized['input_ids']\n    attention_mask = tokenized['attention_mask']\n    labels_tensor = torch.tensor(labels, dtype=torch.float32)\n    return TensorDataset(input_ids, attention_mask, labels_tensor)\n\ntrain_dataset = tokenize_dataset(formatted_texts_train, labels_train, max_length=max_length)\nval_dataset = tokenize_dataset(formatted_texts_val, labels_val, max_length=max_length)\ntest_dataset = tokenize_dataset(formatted_texts_test, labels_test, max_length=max_length)\n","metadata":{"id":"Z1sr9W8Or-Z8","colab":{"base_uri":"https://localhost:8080/","height":281,"referenced_widgets":["ca2a9f2171bb43edbb979c7ea21c0557","cffb966d2f8241a9a888f62487a7f116","3d9f90d5d35f49b3a3d945a9b4917174","7207627056e642958d61b0e83378c3b9","e129b2a37c9a4d0cb6d1aa0d31e39dee","d07427cfce8142bc90f44a4ee34dbca5","7352876852574f42b203249f7ae7bdb1","66499edeb225483190c31b7d169e25ec","5358a16580ee41fba11369b70f7879a5","838d7880e9d44cf4a2fde3c72223af63","333c7e73272c45fb8ee925c39c0ab331","e0b23ee961ca4e02b07bc9cba59a8a7e","669a7b9f9f274932aebe465490450fe2","49be6fefd86f4edd813c70893cfc7911","7f13d9a34f1c4d79b05a54faf4710aea","0b4dd6bda9704b0cbcb47221152cc52d","00838d77e82d4c4eab2c7645fdc310dc","ef9257d698884397b0b400bcc0fa4e6b","0f14c98730474b8e823186db7cf7aa52","c1036ebbb93741c0aaa7dbc9fc4e83e4","854e3bf6c8f44da59802d4dd771e2a4c","b21205e7df9140a1a214a78ad549dbae","0890ae3f58934796873e596f007f1021","eed19d7524474433811038fec9cc6053","633bf8061f03410389bf3b3ac1c5883f","c0d43bb82b9e4b8386428caad0f8606c","5262a577dc6640ab84681358401b3d0a","fcf05c6286094667aded6a167c9f0c30","515acb7e23ea40dd9618a34524e774c3","049f5f896a154859a31767bc94e5c0e8","d208fea954674aa3bed9fe6476fb46a4","14e3804a3bf84a8f88c9dcc06f7275b7","6192c61ac9ad46cabb93dad8f5a30941","27b584445ed049008da6affb858717e1","df773f5fb9ff4a7f8e0f9ef4777f266d","34635ad097b34ee18d5b5f3b39807d40","a739fa82913c4fe193eac5fb1af07cc0","b5c3991b564949ed9dae18921d86008a","818c63a2502e44569ad8354eec861f47","4f42f593219f4419ab4d86b8eefa29f5","829f716d696a45169614610d38183b64","2c590d8912f3443faa99a78f81ad0b33","cb1b0f34b26c4ce8b9d85b1a8597038d","9ddc3128761d4541ad2d7c55bb26d31f","425dedd17889484eb03238cd5d9a9f4f","7c3d927628bc47958ff41996702eac61","7d491dd55f604822844c47c339efc6a5","fdbfd2fcd94b4f1caa3aa50830833770","92b47d377a04426cb067775109cf26d6","72237cb645954dd7a5ffbbe89253ca74","69361d8177e34b219a4c194fc496311b","4d1d2509b4e747c8b4618e74bc6cf538","5c7888a42da5458d8a4613289d968322","c58fb210d27546c5af8e8db3169d8812","a957aa35c38d49c1b21d5f827525b5dc"]},"outputId":"f302f906-151d-4bf8-e089-73828422f8a7","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:44.098201Z","iopub.execute_input":"2025-01-18T20:53:44.098508Z","iopub.status.idle":"2025-01-18T20:53:53.038143Z","shell.execute_reply.started":"2025-01-18T20:53:44.098478Z","shell.execute_reply":"2025-01-18T20:53:53.037221Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/26.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"11d64cc0c71247978b5336b4f7c74887"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.json:   0%|          | 0.00/1.04M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"54f6504a2a48460f82a2bbc657801e15"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a1659eaf3a6a407684aa36a3b45ca32a"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/1.36M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2bb0e71a83694b67be169e9e8ddd81e2"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/665 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b2f65be23c184e98ac81b5c9ef944e26"}},"metadata":{}}],"execution_count":17},{"cell_type":"markdown","source":"## CREATING DATALOADERS","metadata":{"id":"hbmXVCNZsg5y"}},{"cell_type":"code","source":"train_dataloader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True)\nval_dataloader = DataLoader(val_dataset, batch_size=batch_size)\ntest_dataloader = DataLoader(test_dataset, batch_size=batch_size)","metadata":{"id":"4dkuqBTYsdBx","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:53.039089Z","iopub.execute_input":"2025-01-18T20:53:53.039333Z","iopub.status.idle":"2025-01-18T20:53:53.043341Z","shell.execute_reply.started":"2025-01-18T20:53:53.039312Z","shell.execute_reply":"2025-01-18T20:53:53.042472Z"}},"outputs":[],"execution_count":18},{"cell_type":"markdown","source":"## SETTING UP DEVICE","metadata":{"id":"6fX1CARLsnS6"}},{"cell_type":"code","source":"device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")","metadata":{"id":"eKFnu08zsqer","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:53.044154Z","iopub.execute_input":"2025-01-18T20:53:53.044399Z","iopub.status.idle":"2025-01-18T20:53:53.072182Z","shell.execute_reply.started":"2025-01-18T20:53:53.044367Z","shell.execute_reply":"2025-01-18T20:53:53.071562Z"}},"outputs":[],"execution_count":19},{"cell_type":"code","source":"device\n","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mf1HnTaVzfwr","outputId":"06be598d-3a5f-45af-b560-d62e051e5bae","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:53.072807Z","iopub.execute_input":"2025-01-18T20:53:53.073094Z","iopub.status.idle":"2025-01-18T20:53:53.091790Z","shell.execute_reply.started":"2025-01-18T20:53:53.073073Z","shell.execute_reply":"2025-01-18T20:53:53.090952Z"}},"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"device(type='cuda')"},"metadata":{}}],"execution_count":20},{"cell_type":"markdown","source":"## MODEL AND OPTIMIZER","metadata":{"id":"tg9JqKL-suSE"}},{"cell_type":"code","source":"model = GPT2ForSequenceClassification.from_pretrained('gpt2', num_labels=3)\nmodel.config.pad_token_id = tokenizer.pad_token_id\nmodel.to(device)\n\noptimizer = AdamW(model.parameters(), lr=learning_rate)\nMLloss = torch.nn.BCEWithLogitsLoss()  # Multi-label classification","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ODgxDoWYsw_C","outputId":"a4f5738d-74d6-49de-8b80-b72157efb31d","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:53.092585Z","iopub.execute_input":"2025-01-18T20:53:53.092791Z","iopub.status.idle":"2025-01-18T20:53:56.677376Z","shell.execute_reply.started":"2025-01-18T20:53:53.092772Z","shell.execute_reply":"2025-01-18T20:53:56.676466Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/548M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"422d679eca4e4bc9b50c90552538f21a"}},"metadata":{}},{"name":"stderr","text":"Some weights of GPT2ForSequenceClassification were not initialized from the model checkpoint at gpt2 and are newly initialized: ['score.weight']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n  warnings.warn(\n","output_type":"stream"}],"execution_count":21},{"cell_type":"markdown","source":"## TRAINING - EVAL LOOP WITH EARLY STOPPING","metadata":{"id":"e_Hnkbpqs1qC"}},{"cell_type":"code","source":"best_val_loss = float(\"inf\")\nepochs_unimproved = 0\ntrain_losses = [] # To store training loss after each epoch\nval_losses = [] ## Similarly for validation losses\n\nfor epoch in range(num_epochs):\n  print(f\"Epoch {epoch + 1}/{num_epochs}\")\n  model.train()\n  total_train_loss = 0\n\n  for batch in tqdm(train_dataloader, desc = 'Training'):\n    input_ids, attention_masks, batch_labels = batch\n    input_ids, attention_masks, batch_labels = input_ids.to(device), attention_masks.to(device), batch_labels.to(device)\n    optimizer.zero_grad()\n    outputs = model(\n        input_ids = input_ids,\n        attention_mask = attention_masks,\n        labels = batch_labels\n    )\n    logits = outputs.logits\n    loss = MLloss(logits, batch_labels)\n    loss.backward()\n    optimizer.step()\n\n    total_train_loss += loss.item()\n  avg_train_loss = total_train_loss/len(train_dataloader)\n  train_losses.append(avg_train_loss)\n  print(f\"Training Loss (Average): {avg_train_loss}\")\n\n  #Validation Loop\n  model.eval()\n  total_val_loss = 0\n  val_predictions = []\n  val_true_labels = []\n\n  with torch.no_grad():\n    for batch in tqdm(val_dataloader, desc = 'Validation'):\n      input_ids, attention_masks, batch_labels = batch\n      input_ids, attention_masks, batch_labels = input_ids.to(device), attention_masks.to(device), batch_labels.to(device)\n      outputs = model(\n          input_ids = input_ids,\n          attention_mask = attention_masks,\n          labels = batch_labels\n      )\n      logits = outputs.logits\n      loss = MLloss(logits, batch_labels)\n      total_val_loss += loss.item()\n\n\n      probs = torch.sigmoid(logits)\n      pred_classes = (probs >= 0.5).int()\n\n      val_predictions.extend(pred_classes.cpu().numpy())\n      val_true_labels.extend(batch_labels.cpu().numpy())\n\n  avg_val_loss = total_val_loss / len(val_dataloader)\n  val_losses.append(avg_val_loss)\n  val_macro_f1 = f1_score(val_true_labels, val_predictions, average = 'macro')\n\n\n  print(f\"  Validation loss: {avg_val_loss}\")\n  print(f\"  Validation Macro F1 score: {val_macro_f1}\")\n\n\n  ## Early Stopping\n\n  if avg_val_loss < best_val_loss:\n    best_val_loss = avg_val_loss\n    epochs_unimproved = 0\n    torch.save(model.state_dict(), \"best_model.pt\")\n  else:\n    epochs_unimproved += 1\n    print(f\" No improvement in validation loss for {epochs_unimproved} epoch(s).\")\n    if epochs_unimproved >= patience:\n      print(\"Stopping early due to no improvement in validation loss\")\n      break\n\n","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pcmu-PUxs7xZ","outputId":"4ed8ca8d-1a45-4aaf-9971-89a86e593733","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T20:53:56.678162Z","iopub.execute_input":"2025-01-18T20:53:56.678407Z","iopub.status.idle":"2025-01-18T21:58:38.150619Z","shell.execute_reply.started":"2025-01-18T20:53:56.678386Z","shell.execute_reply":"2025-01-18T21:58:38.149784Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/10\n","output_type":"stream"},{"name":"stderr","text":"Training: 100%|██████████| 901/901 [12:29<00:00,  1.20it/s]\n","output_type":"stream"},{"name":"stdout","text":"Training Loss (Average): 0.5373555280756077\n","output_type":"stream"},{"name":"stderr","text":"Validation: 100%|██████████| 124/124 [00:21<00:00,  5.80it/s]\n","output_type":"stream"},{"name":"stdout","text":"  Validation loss: 0.4265776485685379\n  Validation Macro F1 score: 0.5763212742689284\nEpoch 2/10\n","output_type":"stream"},{"name":"stderr","text":"Training: 100%|██████████| 901/901 [12:35<00:00,  1.19it/s]\n","output_type":"stream"},{"name":"stdout","text":"Training Loss (Average): 0.40998992452875493\n","output_type":"stream"},{"name":"stderr","text":"Validation: 100%|██████████| 124/124 [00:21<00:00,  5.80it/s]\n","output_type":"stream"},{"name":"stdout","text":"  Validation loss: 0.4083603237184786\n  Validation Macro F1 score: 0.6668482215824172\nEpoch 3/10\n","output_type":"stream"},{"name":"stderr","text":"Training: 100%|██████████| 901/901 [12:35<00:00,  1.19it/s]\n","output_type":"stream"},{"name":"stdout","text":"Training Loss (Average): 0.37715200851614544\n","output_type":"stream"},{"name":"stderr","text":"Validation: 100%|██████████| 124/124 [00:21<00:00,  5.80it/s]\n","output_type":"stream"},{"name":"stdout","text":"  Validation loss: 0.3830581297797541\n  Validation Macro F1 score: 0.6787384174773933\nEpoch 4/10\n","output_type":"stream"},{"name":"stderr","text":"Training: 100%|██████████| 901/901 [12:35<00:00,  1.19it/s]\n","output_type":"stream"},{"name":"stdout","text":"Training Loss (Average): 0.352198722318526\n","output_type":"stream"},{"name":"stderr","text":"Validation: 100%|██████████| 124/124 [00:21<00:00,  5.80it/s]\n","output_type":"stream"},{"name":"stdout","text":"  Validation loss: 0.4035357859346174\n  Validation Macro F1 score: 0.6820237461758807\n No improvement in validation loss for 1 epoch(s).\nEpoch 5/10\n","output_type":"stream"},{"name":"stderr","text":"Training: 100%|██████████| 901/901 [12:35<00:00,  1.19it/s]\n","output_type":"stream"},{"name":"stdout","text":"Training Loss (Average): 0.323815341885889\n","output_type":"stream"},{"name":"stderr","text":"Validation: 100%|██████████| 124/124 [00:21<00:00,  5.80it/s]","output_type":"stream"},{"name":"stdout","text":"  Validation loss: 0.43045554225963933\n  Validation Macro F1 score: 0.7013241300106005\n No improvement in validation loss for 2 epoch(s).\nStopping early due to no improvement in validation loss\n","output_type":"stream"},{"name":"stderr","text":"\n","output_type":"stream"}],"execution_count":22},{"cell_type":"code","source":"model","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-23T16:25:34.640708Z","iopub.execute_input":"2025-01-23T16:25:34.641151Z","iopub.status.idle":"2025-01-23T16:25:34.648100Z","shell.execute_reply.started":"2025-01-23T16:25:34.641115Z","shell.execute_reply":"2025-01-23T16:25:34.647268Z"}},"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"GPT2ForSequenceClassification(\n  (transformer): GPT2Model(\n    (wte): Embedding(50257, 768)\n    (wpe): Embedding(1024, 768)\n    (drop): Dropout(p=0.1, inplace=False)\n    (h): ModuleList(\n      (0-11): 12 x GPT2Block(\n        (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)\n        (attn): GPT2Attention(\n          (c_attn): Conv1D(nf=2304, nx=768)\n          (c_proj): Conv1D(nf=768, nx=768)\n          (attn_dropout): Dropout(p=0.1, inplace=False)\n          (resid_dropout): Dropout(p=0.1, inplace=False)\n        )\n        (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)\n        (mlp): GPT2MLP(\n          (c_fc): Conv1D(nf=3072, nx=768)\n          (c_proj): Conv1D(nf=768, nx=3072)\n          (act): NewGELUActivation()\n          (dropout): Dropout(p=0.1, inplace=False)\n        )\n      )\n    )\n    (ln_f): LayerNorm((768,), eps=1e-05, elementwise_affine=True)\n  )\n  (score): Linear(in_features=768, out_features=3, bias=False)\n)"},"metadata":{}}],"execution_count":2},{"cell_type":"code","source":"# Reload the best model\nmodel.load_state_dict(torch.load(\"best_model.pt\"))\nprint(\"Loaded the best model for final evaluation.\")","metadata":{"id":"j0U9EJOIUPTx","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T21:58:38.151419Z","iopub.execute_input":"2025-01-18T21:58:38.151696Z","iopub.status.idle":"2025-01-18T21:58:38.572824Z","shell.execute_reply.started":"2025-01-18T21:58:38.151662Z","shell.execute_reply":"2025-01-18T21:58:38.572118Z"}},"outputs":[{"name":"stderr","text":"<ipython-input-23-0b7daee3da4d>:2: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n  model.load_state_dict(torch.load(\"best_model.pt\"))\n","output_type":"stream"},{"name":"stdout","text":"Loaded the best model for final evaluation.\n","output_type":"stream"}],"execution_count":23},{"cell_type":"markdown","source":"## Visualizing training and validation losses","metadata":{"id":"O5sqmQdZyBfF"}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n\nepochs = range(1, len(train_losses) + 1)\n\nplt.figure(figsize=(8, 6))\nplt.plot(epochs, train_losses, label='Training Loss')\nplt.plot(epochs, val_losses, label='Validation Loss')\nplt.title(\"Training & Validation Loss by Epoch\")\nplt.xlabel(\"Epoch\")\nplt.ylabel(\"Loss\")\nplt.legend()\nplt.show()","metadata":{"id":"3JamN1SkyGUX","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T21:58:38.573570Z","iopub.execute_input":"2025-01-18T21:58:38.573851Z","iopub.status.idle":"2025-01-18T21:58:38.982427Z","shell.execute_reply.started":"2025-01-18T21:58:38.573820Z","shell.execute_reply":"2025-01-18T21:58:38.981637Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":24},{"cell_type":"markdown","source":"## TESTING LOOP","metadata":{"id":"_xCWw-Sexzn2"}},{"cell_type":"code","source":"model.eval()\ntest_predictions = []\ntest_true_labels = []\n\nwith torch.no_grad():\n    for batch in tqdm(test_dataloader, desc=\"Testing\"):\n        input_ids, attention_masks, batch_labels = batch\n        input_ids, attention_masks, batch_labels = input_ids.to(device), attention_masks.to(device), batch_labels.to(device)\n        outputs = model(\n            input_ids=input_ids,\n            attention_mask=attention_masks,\n            labels=batch_labels\n        )\n\n        logits = outputs.logits\n\n\n        probs = torch.sigmoid(logits)\n        pred_classes = (probs >= 0.5).int()\n        \n        test_predictions.extend(pred_classes.cpu().numpy())\n        test_true_labels.extend(batch_labels.cpu().numpy())\n\n","metadata":{"id":"K2vcIHATx1c-","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T21:58:38.985027Z","iopub.execute_input":"2025-01-18T21:58:38.985244Z","iopub.status.idle":"2025-01-18T21:59:33.706000Z","shell.execute_reply.started":"2025-01-18T21:58:38.985226Z","shell.execute_reply":"2025-01-18T21:59:33.705193Z"}},"outputs":[{"name":"stderr","text":"Testing: 100%|██████████| 213/213 [00:54<00:00,  3.89it/s]\n","output_type":"stream"}],"execution_count":25},{"cell_type":"code","source":"probs","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-23T17:56:48.735261Z","iopub.execute_input":"2025-01-23T17:56:48.735720Z","iopub.status.idle":"2025-01-23T17:56:49.310591Z","shell.execute_reply.started":"2025-01-23T17:56:48.735682Z","shell.execute_reply":"2025-01-23T17:56:49.309677Z"}},"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"tensor([[0.9316, 0.7361, 0.0200],\n        [0.9045, 0.1249, 0.8848],\n        [0.2232, 0.2174, 0.8365],\n        [0.2085, 0.0914, 0.9529],\n        [0.2274, 0.2666, 0.0290]], device='cuda:0', requires_grad=True)"},"metadata":{}}],"execution_count":6},{"cell_type":"markdown","source":"## Calculating Performance Metrics","metadata":{"id":"0YGbz6I5x7SF"}},{"cell_type":"code","source":"test_predictions[:5]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T21:59:33.706748Z","iopub.execute_input":"2025-01-18T21:59:33.706968Z","iopub.status.idle":"2025-01-18T21:59:33.712405Z","shell.execute_reply.started":"2025-01-18T21:59:33.706949Z","shell.execute_reply":"2025-01-18T21:59:33.711646Z"}},"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"[array([1, 0, 0], dtype=int32),\n array([0, 0, 1], dtype=int32),\n array([0, 0, 1], dtype=int32),\n array([0, 1, 0], dtype=int32),\n array([0, 0, 1], dtype=int32)]"},"metadata":{}}],"execution_count":26},{"cell_type":"code","source":"test_hamming_loss = hamming_loss(test_true_labels, test_predictions)\ntest_macro_f1 = f1_score(test_true_labels, test_predictions, average=\"macro\")\ntest_micro_f1 = f1_score(test_true_labels, test_predictions, average=\"micro\")\nexact_match_ratio = accuracy_score(test_true_labels, test_predictions)\ntest_hamming_score = 1 - test_hamming_loss\n\nprint(f\"Test Hamming Loss: {test_hamming_loss:.4f}\")\nprint(f\"Test Hamming Score: {test_hamming_score:.4f}\")\nprint(f\"Test Macro F1 Score: {test_macro_f1:.4f}\")\nprint(f\"Test Micro F1 Score: {test_micro_f1:.4f}\")\nprint(f\"Test Exact Match Ratio: {exact_match_ratio:.4f}\")\nprint(\"\\nClassification Report:\")\nprint(classification_report(test_true_labels, test_predictions, target_names=[\"Commenting\", \"Ogling\", \"Groping\"]))","metadata":{"id":"0TJZ6JuOx-2O","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T21:59:33.713316Z","iopub.execute_input":"2025-01-18T21:59:33.713638Z","iopub.status.idle":"2025-01-18T21:59:33.774196Z","shell.execute_reply.started":"2025-01-18T21:59:33.713601Z","shell.execute_reply":"2025-01-18T21:59:33.773339Z"}},"outputs":[{"name":"stdout","text":"Test Hamming Loss: 0.1597\nTest Hamming Score: 0.8403\nTest Macro F1 Score: 0.6683\nTest Micro F1 Score: 0.7024\nTest Exact Match Ratio: 0.6279\n\nClassification Report:\n              precision    recall  f1-score   support\n\n  Commenting       0.83      0.67      0.74       654\n      Ogling       0.74      0.36      0.49       375\n     Groping       0.82      0.74      0.78       525\n\n   micro avg       0.81      0.62      0.70      1554\n   macro avg       0.80      0.59      0.67      1554\nweighted avg       0.80      0.62      0.69      1554\n samples avg       0.50      0.46      0.47      1554\n\n","output_type":"stream"},{"name":"stderr","text":"/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in samples with no predicted labels. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in samples with no true labels. Use `zero_division` parameter to control this behavior.\n  _warn_prf(average, modifier, msg_start, len(result))\n","output_type":"stream"}],"execution_count":27}]}